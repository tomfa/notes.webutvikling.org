---
import { getFormattedDate } from "@/utils";
import { Image } from 'astro:assets';
import type { CollectionEntry } from "astro:content";

interface Props {
	content: CollectionEntry<"post"> | CollectionEntry<"link">
}

const { content } = Astro.props;

const datetime = (content.data.pubDate || new Date()).toISOString();
const postDate = getFormattedDate(content.data.pubDate);
---

{
	content.data.heroImage && (
		<Image width="493" height="300" class="mb-2" src={content.data.heroImage} alt={content.data.imageAlt} />
	)
}
{
	content.data.imageAlt && (
		<span class="mb-4 block text-xs text-gray-400">{content.data.imageAlt}</span>
	)
}
<h1 class="title">{content.data.title}</h1>

<time datetime={datetime}>{postDate}</time>
{
	content.data.tags.length > 0 && (
		<div>
			<svg
				aria-hidden="true"
				focusable="false"
				xmlns="http://www.w3.org/2000/svg"
				class="mx-1 inline-block h-6 w-6"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				fill="none"
				stroke-linecap="round"
				stroke-linejoin="round"
			>
				<path stroke="none" d="M0 0h24v24H0z" fill="none" />
				<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
				<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
				<path d="M6 9h-.01" />
			</svg>
			{content.data.tags.map((tag, i) => (
				<span className={i !== 0 && "before:content-['|']"}>
					<a
						class="link inline-block"
						aria-label={`View more blogs with the tag ${tag}`}
						href={`/tags/${tag}`}
					>
						{tag}
					</a>
				</span>
			))}
		</div>
	)
}
<p class="mt-8">{content.data.description}</p>
{content.data.url && <a href={content.data.url} class="link block mt-8">Go to content</a>}

