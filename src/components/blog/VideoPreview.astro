---
import type { CollectionEntry } from "astro:content";
import type { IElement } from "@/data/shared";
import { getFormattedDate, getVideoData } from "@/utils";
import { Vimeo, YouTube } from "astro-embed";

interface Props extends IElement {
	post: CollectionEntry<"video">;
	withDesc?: boolean;
	withTags?: boolean;
}

const { post, as: Element = "div", withDesc = true, withTags = true } = Astro.props;
const date = new Date(post.data.pubDate || Date.now());
const datetime = date.toISOString();
const postDate = getFormattedDate(date, { month: "short" });
const { id: videoId, params, provider } = getVideoData(post.data.url);
const isVideo = !!provider;
---

<Element>
	{
		!isVideo && (
			<a href={post.data.url} class="cactus-link block text-xl" rel="prefetch">
				{post.data.title}
			</a>
		)
	}
	{isVideo && <span class="block text-lg">{post.data.title}</span>}
</Element>
<div class="mt-2 w-full">
	{provider === 'youtube' && <YouTube id={videoId} params={params} />}
	{provider === 'vimeo'  && <Vimeo id={videoId} />}
</div>

<div class="align-start mt-1 flex w-full justify-between">
	<div class="shrink-0">
		<time class="mr-3 text-xs text-gray-400" datetime={datetime}>{postDate}</time>
	</div>
	<div class="text-right">
		{
			post.data.tags.map((tag, i) => (
				<>
					<a
						href={`/tags/${tag}`}
						aria-label={`View all posts with the tag: ${tag}`}
						class="link mr-2 items-center justify-center rounded-lg text-xs text-accent dark:opacity-30 dark:hover:opacity-100"
					>
						{tag}
					</a>{" "}
				</>
			))
		}
	</div>
</div>

{withDesc && <q class="mt-2 block italic">{post.data.description}</q>}
<div class="mb-12"></div>
